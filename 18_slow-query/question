課題１（実装）

前の課題で立ち上げた MySQL インスタンスの設定を書き換えて、スロークエリログを有効にしてください
実行に0.1秒以上かかったクエリをスロークエリログに記録するように設定してください
実行時間0.1秒以下のクエリを3つ実行して、スロークエリログに記録されない事を確認してください
実行時間が0.1秒より長いクエリを3つ実行して、スロークエリログに記録される事を確認してください
どんなクエリを実行したのかペアと見せ合って、実行時間を比較してみましょう


課題２（実装）

スロークエリログをそのままcatなどを使って表示しても構いませんが、そのままだと少々扱いづらいのではないでしょうか？
例えば以下のような情報をどのように取得すれば良いのでしょう？
最も頻繁に発生しているスロークエリ
異なるクエリとして保存されているけれども、実質ほとんど同じようなクエリ（select * from employees where id = 3 と select * from employees where id = 1など）
そんな時に便利なのがmysqldumpslowコマンドです
上記コマンドを使って、以下の条件に合致するクエリを特定してみましょう。何かしらのオプションを指定する必要があるはずです。そのオプションをペアに共有して、答え合わせをしましょう
最も頻度高くスロークエリに現れるクエリ
実行時間が最も長いクエリ
ロック時間が最も長いクエリ
ヒント：ロック時間が短い場合、mysqldumpslowだと0secと表示されてしまうかもしれません
pt-query-digestなども有名なログ集計ツールです。より多くの統計情報が簡単に得られるので、もし興味があれば是非使ってみてください！


課題３（実装）

最も頻度高く発生するスロークエリを高速化するために、（可能であれば）インデックスを作成してください
実行時間が最も長いスロークエリを高速化するために、（可能であれば）インデックスを作成してください


課題４（質問）

最近入社した新人エンジニア達に、こんなことを聞かれました。先輩として、ビシッと答えてあげてください！
新人A「先輩...LIMIT 1って書いたのにめちゃくちゃ遅いクエリがあるんです。１件しか取得しないのに、どうして時間かかるんですか？」
新人B「先輩...1960年以降に生まれた全ての男性社員の給与を取得して欲しいと言われて、こんなクエリを書いたら...
 SELECT * FROM employees e JOIN salaries s ON e.emp_no = s.emp_no WHERE gender = "M" AND birth_date > "1960-01-01"


新人B「別の先輩に『その条件なら、WHEREじゃなくてONで絞った方が良いかもよ』って言われたんです。でも両方のクエリを実行してみたところ、パフォーマンス上の違いはほとんどありませんでした。このクエリをONで書いた方がいい理由ってあるんですかね・・・？そもそも、JOIN WHEREで絞るのとJOIN ONで絞るのって、一体何が違うんですか？」
ヒント：inner joinであれば今回のクエリの出力結果は変わりませんが、例えばleft outer joinだった場合はどのような違いが生じるでしょうか？
SELECT * FROM employees e JOIN salaries s ON e.emp_no = s.emp_no AND gender = "M" AND birth_date > "1960-01-01"


課題５

スロークエリに関連するクイズを作成してください
クイズに関する詳細は　コチラ　を参照してください