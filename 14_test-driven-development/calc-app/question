課題１（質問）

テスト駆動開発のメリットと、デメリットを挙げてください
TDDにおける以下の用語の意味を説明してください
三点測量
レッド・グリーン・リファクタリング
仮実装


課題２（実装）

四則演算を行うnode.jsのスクリプトを、単体テストから先に作成してください
以下のような動作イメージです：
node script.js multiply 3 10 3 // 90を返す
node script.js add 3 10 3 // 16を返す
node script.js subtract 3 10 3 // -10を返す
node script.js divide 100 10 // 10を返す
以下の仕様を満たすものとします
渡された引数に対して計算を行い、結果を返す
1個〜30個までの引数を受け取る（31個以上の引数を指定するとエラーが発生する）
引数が数字以外だとエラーが発生する
足し算の場合、計算結果が1000を超える場合は合計ではなく「too big」と文字列が返る
引き算の場合、計算結果がマイナスの場合は「negative number」と文字列が返る
かけ算の場合、計算結果が1000を越える場合は「big big number」と文字列が返る
割り算の場合、計算結果を小数点何桁まで考慮するかは特に指定がありません。お任せします！


着手する際は、必ず「テストを先に書いてから」機能を実装し始めてください
こんな順番で進めると良いでしょう：
必要になりそうな単体テストを全て、todoリストに記載する（「addに1と2を渡したら3が返ってくる」など）
todoリストから一つ選んで、テストを書く
テストが落ちることを確認する（まだ実装してませんからね！）
テストが通るように実装する
テストが通ることを確認する
todoリストから一つ選んで、テストを書く（繰り返し）
常に「あえて一度、落ちるテストを書く」「実装する」「テストを通す」を意識してくださいね！






（任意課題）

以下の書籍がテスト駆動開発に関しては最も分かりやすく、かつテスト駆動開発を提唱したケント・ベック氏本人が執筆した書籍のため、ペアやチームと一緒に輪読するか、個人で読むのがオススメです！



前半と後半に分かれており、前半を読み通すだけでもエッセンスは掴めるため、比較的すぐ読み終わるのではないかな？と考えております



https://www.amazon.co.jp/dp/4274217884/

